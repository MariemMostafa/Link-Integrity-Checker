/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import java.io.IOException;
import linkintegrity.ValidationMethods;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import static userinterface.FrontPage.future;
import static userinterface.FrontPage.min;
import static userinterface.FrontPage.pool;
import static userinterface.FrontPage.timeCompare;
import static linkintegrity.ValidationMethods.startThreadsAndCounters;

/**
 *
 */
public class Statistics extends javax.swing.JFrame {

    private void autoThreadsValidate(String l, int depth, int threadNumber) {
        int i = 1;
        boolean continueLoop = true;
        do {
            ValidationMethods.setCountInvalid(0);
            ValidationMethods.setCountValid(0);
            FrontPage.linkList.add(i + " Thread(s)");
            pool = Executors.newFixedThreadPool(i);
            startThreadsAndCounters(l, depth, threadNumber, i);
            if (i != 1) {
                if (timeCompare.get(i - 1) >= timeCompare.get(i - 2)) {
                    continueLoop = false;
                }
            }
            i++;
            FrontPage.linkList.add("Valid " + ValidationMethods.getCountValid());
            FrontPage.linkList.add("Invalid " + ValidationMethods.getCountInvalid());
            FrontPage.linkList.add("Execution time in seconds: " + FrontPage.timeElapsed);
            FrontPage.linkList.add("\n");
//            System.out.println("Valid " + ValidationMethods.getCountValid());
//            System.out.println("Invalid " + ValidationMethods.getCountInvalid());
//            System.out.println("Execution time in seconds: " + FrontPage.timeElapsed);
//            System.out.println("\n");
//            System.out.println("Invalid " + ValidationMethods.getCountInvalid());

        } while (continueLoop);

    }

    private void validationProcess(String l, int depth, int threadNumber) {
        nValidField.setText("Loading...");
        nInvalidField.setText("Loading...");
        mTimeField.setText("Loading...");
        for (int i = 1; i < threadNumber + 1; i++) {
            ValidationMethods.setCountInvalid(0);
            ValidationMethods.setCountValid(0);
            pool = Executors.newFixedThreadPool(i);
            FrontPage.linkList.add(i + " Thread(s)");
            startThreadsAndCounters(l, depth, threadNumber, i);
            FrontPage.linkList.add("Valid " + ValidationMethods.getCountValid());
            FrontPage.linkList.add("Invalid " + ValidationMethods.getCountInvalid());
            //System.out.println("Invalid " + ValidationMethods.getCountInvalid());
            FrontPage.linkList.add("Execution time in seconds: " + FrontPage.timeElapsed);
            FrontPage.linkList.add("\n");
//            System.out.println("Valid " + ValidationMethods.getCountValid());
//            System.out.println("Execution time in seconds: " + FrontPage.timeElapsed);
//            System.out.println("\n");
        }
    }

    public Statistics(String link, int depth, int threadNumber) {
        initComponents();
        DefaultTableModel tableModel = (DefaultTableModel) this.jTable1.getModel();
        nValidField.setEditable(false);
        nInvalidField.setEditable(false);
        mTimeField.setEditable(false);
        if (threadNumber == -1) {
            autoThreadsValidate(link, depth, threadNumber);
        } else {
            validationProcess(link, depth, threadNumber);
        }
        if (depth != 0 && threadNumber != 0) {
            while (!future.isDone()) {

            }
        }
        if (threadNumber > 1) {
            while (!pool.isTerminated()) {
            }
        }
        nValidField.setText(Integer.toString(ValidationMethods.getCountValid()));
        nInvalidField.setText(Integer.toString(ValidationMethods.getCountInvalid()));
        mTimeField.setText(Long.toString(min));
        int size = timeCompare.size();
        for (int i = 0; i < size; i++) {
            Object b[] = new Object[]{(i + 1) + " Thread(s)", timeCompare.get(i)};
            tableModel.addRow(b);
        }
        try {
            ValidationMethods.WriteToFile();
        } catch (IOException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
        ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nValidField = new javax.swing.JTextField();
        nInvalidField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mTimeField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Statistics");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/userinterface/icon.png")).getImage());

        jLabel1.setText("Number of Valid Links");

        jLabel2.setText("Number of Invalid Links");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number of Threads", "Execution Time"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        nValidField.setText("Loading...");
        nValidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nValidFieldActionPerformed(evt);
            }
        });

        nInvalidField.setText("Loading...");
        nInvalidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nInvalidFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Minimum Execution Time");

        mTimeField.setText("Loading...");
        mTimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTimeFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nInvalidField)
                    .addComponent(nValidField)
                    .addComponent(mTimeField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nValidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nInvalidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nInvalidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nInvalidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nInvalidFieldActionPerformed

    private void nValidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nValidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nValidFieldActionPerformed

    private void mTimeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTimeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mTimeFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FrontPage x = new FrontPage();
        this.setVisible(false);
        x.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mTimeField;
    private javax.swing.JTextField nInvalidField;
    private javax.swing.JTextField nValidField;
    // End of variables declaration//GEN-END:variables
}
